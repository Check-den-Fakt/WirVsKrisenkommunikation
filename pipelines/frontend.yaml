# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '144e7092-f976-4fc0-bf0e-57e2de0863ed'
  
  # Web app name
  webAppName: 'we-komfront-web2'
  
  # Environment name
  environmentName: 'prod'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Image name
  imageName: 'wirvsvirus.azurecr.io/frontend'

stages:
- stage: ARM
  displayName: Deploy ARM
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
      
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Azure Pass â€“ Sponsorship (db59ff20-bbda-4c19-a433-d5f11767ea07)'
        subscriptionId: 'db59ff20-bbda-4c19-a433-d5f11767ea07'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'we-komfront-rg'
        location: 'West Europe'
        templateLocation: 'Linked artifact'
        csmFile: '$(Build.SourcesDirectory)/arm/frontend.json'
        csmParametersFile: '$(Build.SourcesDirectory)/arm/frontend.parameters.json'
        deploymentMode: 'Incremental'

- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
      
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Install Node.js'

    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: '$(Build.SourcesDirectory)/frontend'

    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: '$(Build.SourcesDirectory)/frontend'
        customCommand: 'run build'

    - task: Docker@2
      displayName: Build Image
      inputs:
        containerRegistry: 'acrConnection'
        repository: '$(imageName)'
        command: 'buildAndPush'
        Dockerfile: 'frontend/Dockerfile'
        tags: |
          wirvsvirus.azurecr.io/frontend

#- stage: Deploy
#  displayName: Deploy stage
#  dependsOn: Build
#  condition: succeeded()
#  jobs:
#  - deployment: Deploy
#    displayName: Deploy
#    environment: $(environmentName)
#    pool:
#      vmImage: $(vmImageName)
#    strategy:
#      runOnce:
#        deploy:
#          steps:
#          - task: AzureWebApp@1
#            displayName: 'Azure Web App Deploy: we-komfront-web'
#            inputs:
#              azureSubscription: $(azureSubscription)
#              appType: webAppLinux
#              appName: $(webAppName)
#              runtimeStack: 'NODE|12'
#              package: $(System.DefaultWorkingDirectory)
#              startUpCommand: 'npm run serve'

